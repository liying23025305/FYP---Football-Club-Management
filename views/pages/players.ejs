<% const seasons = ['2023/24', '2022/23', '2021/22'];
const clubs = [
  { code: 'ARS', name: 'Arsenal' },
  { code: 'AVL', name: 'Aston Villa' },
  { code: 'BOU', name: 'Bournemouth' },
  { code: 'BRE', name: 'Brentford' },
  { code: 'BHA', name: 'Brighton & Hove Albion' },
  { code: 'BUR', name: 'Burnley' },
  { code: 'CHE', name: 'Chelsea' },
  { code: 'CRY', name: 'Crystal Palace' },
  // ... add more clubs as needed ...
];
const players = [
  { name: 'Max Aarons', club: 'BOU', position: 'Defender', nationality: 'England', flag: '/images/flags/england.png', photo: '/images/players/aarons.png', season: '2021/22' },
  { name: 'Tammy Abraham', club: 'CHE', position: 'Forward', nationality: 'England', flag: '/images/flags/england.png', photo: '/images/players/abraham.png', season: '2021/22' },
  { name: 'Adam Armstrong', club: 'SOU', position: 'Forward', nationality: 'England', flag: '/images/flags/england.png', photo: '/images/players/armstrong.png', season: '2021/22' },
  { name: 'Ché Adams', club: 'SOU', position: 'Forward', nationality: 'Scotland', flag: '/images/flags/scotland.png', photo: '/images/players/adams.png', season: '2021/22' },
  { name: 'Tayo Adaramola', club: 'CRY', position: 'Defender', nationality: 'Ireland', flag: '/images/flags/ireland.png', photo: '/images/players/adaramola.png', season: '2021/22' },
  { name: 'Adrián', club: 'LIV', position: 'Goalkeeper', nationality: 'Spain', flag: '/images/flags/spain.png', photo: '/images/players/adrian.png', season: '2021/22' },
  { name: 'Sergio Agüero', club: 'MCI', position: 'Forward', nationality: 'Argentina', flag: '/images/flags/argentina.png', photo: '/images/players/aguero.png', season: '2021/22' },
  // ... add more players as needed ...
];
%>
<style>
.players-banner {
  width: 100%;
  height: 180px;
  background: linear-gradient(120deg, #3a8dde 0%, #7b2ff2 100%);
  color: #fff;
  display: flex;
  align-items: center;
  font-family: 'Oswald', Arial, sans-serif;
  font-size: 3rem;
  font-weight: 900;
  padding-left: 48px;
  letter-spacing: 2px;
  margin-bottom: 0;
}
.players-search-row {
  display: flex;
  align-items: center;
  gap: 24px;
  margin-top: -40px;
  margin-bottom: 32px;
  padding-left: 48px;
}
.players-search-input {
  flex: 1;
  padding: 14px 18px;
  border-radius: 8px;
  border: 1px solid #ddd;
  font-size: 1.1rem;
  margin-right: 12px;
}
.players-filter-row {
  display: flex;
  gap: 24px;
  align-items: center;
  margin-bottom: 18px;
  padding-left: 48px;
}
.players-filter-label {
  font-weight: 600;
  margin-right: 8px;
}
.players-filter-select {
  padding: 8px 16px;
  border-radius: 8px;
  border: 1px solid #ddd;
  font-size: 1rem;
  margin-right: 18px;
}
.players-reset-btn {
  background: none;
  border: none;
  color: #3a8dde;
  font-weight: 600;
  font-size: 1.1rem;
  cursor: pointer;
  display: flex;
  align-items: center;
  gap: 6px;
}
.players-table {
  width: 100%;
  border-collapse: collapse;
  margin-top: 18px;
  background: #fff;
  border-radius: 12px;
  overflow: hidden;
}
.players-table th, .players-table td {
  padding: 14px 18px;
  border-bottom: 1px solid #eee;
  font-size: 1.1rem;
  text-align: left;
}
.players-table th {
  background: #f3f3f3;
  font-family: 'Oswald', Arial, sans-serif;
  font-size: 1.1rem;
  letter-spacing: 1px;
}
.players-photo {
  height: 40px;
  width: 40px;
  border-radius: 50%;
  object-fit: cover;
  margin-right: 12px;
  background: #eee;
}
.players-flag {
  height: 24px;
  margin-right: 8px;
  vertical-align: middle;
}
@media (max-width: 900px) {
  .players-banner, .players-search-row, .players-filter-row { padding-left: 12px; padding-right: 12px; }
}

.player-modal-overlay {
  position: fixed; top: 0; left: 0; width: 100vw; height: 100vh;
  background: rgba(30,30,60,0.7); z-index: 9999; display: flex; align-items: center; justify-content: center;
}
.player-modal {
  background: #fff; border-radius: 18px; width: 700px; max-width: 98vw; padding: 0 0 32px 0; position: relative; box-shadow: 0 8px 32px rgba(0,0,0,0.18);
  animation: popIn 0.2s;
}
@keyframes popIn { from { transform: scale(0.95); opacity: 0; } to { transform: scale(1); opacity: 1; } }
.player-modal-close {
  position: absolute; top: 18px; right: 28px; font-size: 2rem; color: #333; cursor: pointer; z-index: 2;
}
.player-modal-header {
  background: linear-gradient(120deg, #3a8dde 0%, #7b2ff2 100%);
  border-radius: 18px 18px 0 0; display: flex; align-items: center; padding: 32px 32px 18px 32px;
}
.player-modal-photo {
  width: 110px; height: 110px; border-radius: 50%; object-fit: cover; border: 4px solid #fff; background: #eee; margin-right: 32px;
}
.player-modal-title { color: #fff; }
.player-modal-name { font-size: 2.2rem; font-weight: 900; font-family: 'Oswald', Arial, sans-serif; }
.player-modal-position { font-size: 1.2rem; font-weight: 600; margin-top: 4px; }
.player-modal-tabs { display: flex; gap: 8px; margin: 18px 0 0 32px; }
.player-modal-tab { background: none; border: none; font-size: 1.1rem; font-weight: 700; color: #7b2ff2; padding: 8px 18px; border-radius: 8px 8px 0 0; cursor: pointer; }
.player-modal-tab.active, .player-modal-tab:hover { background: #f3f3f3; color: #3a8dde; }
.player-modal-content { padding: 24px 32px 0 32px; }
.player-modal-details-row { display: flex; gap: 48px; margin-bottom: 18px; }
.player-modal-details-row > div { font-size: 1.1rem; }
.player-modal-socials { margin-bottom: 18px; font-size: 1.2rem; }
.player-modal-socials a { color: #7b2ff2; margin-right: 12px; }
.player-modal-record { display: flex; gap: 32px; margin-bottom: 18px; }
.player-modal-record > div { font-size: 1.1rem; }
.player-modal-career-table { width: 100%; border-collapse: collapse; margin-top: 8px; }
.player-modal-career-table th, .player-modal-career-table td { padding: 8px 12px; border-bottom: 1px solid #eee; font-size: 1rem; }
.player-modal-career-table th { background: #f3f3f3; }
@media (max-width: 800px) {
  .player-modal { width: 98vw; padding: 0; }
  .player-modal-header, .player-modal-content { padding-left: 12px; padding-right: 12px; }
  .player-modal-details-row { flex-direction: column; gap: 8px; }
  .player-modal-record { flex-direction: column; gap: 8px; }
}
.player-modal-stats-filters-row {
  display: flex; gap: 18px; align-items: center; margin-bottom: 24px; margin-top: 8px;
}
.player-modal-stats-filter {
  padding: 8px 16px; border-radius: 8px; border: 1px solid #ddd; font-size: 1rem;
}
.player-modal-stats-reset {
  background: none; border: none; color: #4b256e; font-weight: 600; font-size: 1.1rem; cursor: pointer; display: flex; align-items: center; gap: 6px; margin-left: auto;
}
.player-modal-stats-cards-row {
  display: flex; gap: 24px; margin-bottom: 24px;
}
.player-modal-stats-card {
  background: #f8f6ff; border-radius: 12px; flex: 1; padding: 18px 0; text-align: center; box-shadow: 0 2px 8px rgba(123,47,242,0.04);
}
.player-modal-stats-card-label {
  font-size: 1.1rem; color: #7b2ff2; font-weight: 700; margin-bottom: 6px;
}
.player-modal-stats-card-value {
  font-size: 2.4rem; font-weight: 900; color: #3a0057; font-family: 'Oswald', Arial, sans-serif;
}
.player-modal-stats-columns-row {
  display: flex; gap: 32px; margin-top: 18px;
}
.player-modal-stats-col {
  flex: 1; background: #fff; border-radius: 12px; box-shadow: 0 2px 8px rgba(123,47,242,0.04); padding: 0 0 18px 0;
}
.player-modal-stats-col-title {
  font-size: 1.2rem; font-weight: 900; color: #3a8dde; border-bottom: 3px solid #d6ff00; padding: 12px 18px 6px 18px; margin-bottom: 8px;
}
.player-modal-stats-col-list {
  padding: 0 18px;
}
.player-modal-stats-col-list > div {
  display: flex; justify-content: space-between; padding: 7px 0; border-bottom: 1px solid #f3f3f3; font-size: 1.08rem;
}
.player-modal-stats-col-list > div:last-child { border-bottom: none; }
@media (max-width: 800px) {
  .player-modal-stats-cards-row, .player-modal-stats-columns-row { flex-direction: column; gap: 12px; }
}
</style>
<link href="https://fonts.googleapis.com/css?family=Oswald:700&display=swap" rel="stylesheet">
<div class="players-banner">Players</div>
<div class="players-search-row">
  <input type="text" id="playerSearch" class="players-search-input" placeholder="Search for a Player" oninput="filterPlayers()">
  <button style="background:none;border:none;cursor:pointer;" onclick="filterPlayers()"><i class="fas fa-search"></i></button>
</div>
<div class="players-filter-row">
  <label class="players-filter-label">Filter by Season</label>
  <select id="seasonFilter" class="players-filter-select" onchange="filterPlayers()">
    <option value="ALL">All Seasons</option>
    <% seasons.forEach(season => { %>
      <option value="<%= season %>"><%= season %></option>
    <% }) %>
  </select>
  <label class="players-filter-label">Filter by Club</label>
  <select id="clubFilter" class="players-filter-select" onchange="filterPlayers()">
    <option value="ALL">All Clubs</option>
    <% clubs.forEach(club => { %>
      <option value="<%= club.code %>"><%= club.name %></option>
    <% }) %>
  </select>
  <button class="players-reset-btn" onclick="resetFilters()"><i class="fas fa-sync-alt"></i> RESET FILTERS</button>
</div>
<table class="players-table" id="playersTable">
  <thead>
    <tr>
      <th>Player</th>
      <th>Position</th>
      <th>Nationality</th>
    </tr>
  </thead>
  <tbody id="playersTableBody">
    <% players.forEach(player => { %>
      <tr data-player='<%- JSON.stringify(player) %>'>
        <td><img src="<%= player.photo %>" class="players-photo"> <%= player.name %></td>
        <td><%= player.position %></td>
        <td><img src="<%= player.flag %>" class="players-flag"> <%= player.nationality %></td>
      </tr>
    <% }) %>
  </tbody>
</table>
<script>
const allPlayers = <%- JSON.stringify(players) %>;
function filterPlayers() {
  const search = document.getElementById('playerSearch').value.toLowerCase();
  const season = document.getElementById('seasonFilter').value;
  const club = document.getElementById('clubFilter').value;
  const tbody = document.getElementById('playersTableBody');
  tbody.innerHTML = '';
  allPlayers.forEach(player => {
    if ((season === 'ALL' || player.season === season) &&
        (club === 'ALL' || player.club === club) &&
        (player.name.toLowerCase().includes(search))) {
      const row = document.createElement('tr');
      row.innerHTML = `<td><img src="${player.photo}" class="players-photo"> ${player.name}</td><td>${player.position}</td><td><img src="${player.flag}" class="players-flag"> ${player.nationality}</td>`;
      tbody.appendChild(row);
    }
  });
}
function resetFilters() {
  document.getElementById('playerSearch').value = '';
  document.getElementById('seasonFilter').value = 'ALL';
  document.getElementById('clubFilter').value = 'ALL';
  filterPlayers();
}

// Add click event to player rows
Array.from(document.querySelectorAll('#playersTableBody tr')).forEach(row => {
  row.style.cursor = 'pointer';
  row.addEventListener('click', function() {
    const player = JSON.parse(this.getAttribute('data-player'));
    openPlayerModal(player);
  });
});

// Example player details data (mock, can be replaced with real data)
const playerDetails = {
  'Max Aarons': {
    dob: '04/01/2000', age: 25, height: '178cm',
    socials: { x: 'https://x.com/maxaarons', instagram: 'https://instagram.com/maxaarons' },
    record: { appearances: 93, goals: 0, assists: 4, cleanSheets: 10 },
    career: [
      { season: '2024/2025', club: 'Bournemouth', clubLogo: '/images/clubs/bournemouth.png', apps: '3 (2)', goals: 0 },
      { season: '2023/2024', club: 'Bournemouth', clubLogo: '/images/clubs/bournemouth.png', apps: '20 (7)', goals: 0 },
      { season: '2021/2022', club: 'Norwich City', clubLogo: '/images/clubs/norwich.png', apps: '34 (2)', goals: 0 },
      { season: '2019/2020', club: 'Norwich City', clubLogo: '/images/clubs/norwich.png', apps: '36 (0)', goals: 0 },
    ]
  },
  // Add more players as needed
};

function openPlayerModal(player) {
  document.getElementById('modalPlayerPhoto').src = player.photo;
  document.getElementById('modalPlayerName').textContent = player.name;
  document.getElementById('modalPlayerPosition').textContent = player.position;
  document.getElementById('modalPlayerNationality').innerHTML = `<img src="${player.flag}" class="players-flag"> ${player.nationality}`;
  // Fill details if available
  const details = playerDetails[player.name];
  if(details) {
    document.getElementById('modalPlayerDOB').textContent = `${details.dob} (${details.age})`;
    document.getElementById('modalPlayerHeight').textContent = details.height;
    document.getElementById('modalPlayerX').href = details.socials.x;
    document.getElementById('modalPlayerInstagram').href = details.socials.instagram;
    document.getElementById('modalPlayerAppearances').textContent = details.record.appearances;
    document.getElementById('modalPlayerGoals').textContent = details.record.goals;
    document.getElementById('modalPlayerAssists').textContent = details.record.assists;
    document.getElementById('modalPlayerCleanSheets').textContent = details.record.cleanSheets;
    // Career table
    const tbody = document.getElementById('modalPlayerCareer');
    tbody.innerHTML = '';
    details.career.forEach(row => {
      tbody.innerHTML += `<tr><td>${row.season}</td><td><img src="${row.clubLogo}" style="height:24px;vertical-align:middle;margin-right:6px;">${row.club}</td><td>${row.apps}</td><td>${row.goals}</td></tr>`;
    });
  } else {
    document.getElementById('modalPlayerDOB').textContent = '-';
    document.getElementById('modalPlayerHeight').textContent = '-';
    document.getElementById('modalPlayerX').href = '#';
    document.getElementById('modalPlayerInstagram').href = '#';
    document.getElementById('modalPlayerAppearances').textContent = '-';
    document.getElementById('modalPlayerGoals').textContent = '-';
    document.getElementById('modalPlayerAssists').textContent = '-';
    document.getElementById('modalPlayerCleanSheets').textContent = '-';
    document.getElementById('modalPlayerCareer').innerHTML = '<tr><td colspan="4">No data</td></tr>';
  }
  document.getElementById('playerModal').style.display = 'flex';
  showModalTab('overview');
}
function closePlayerModal() {
  document.getElementById('playerModal').style.display = 'none';
}
function showModalTab(tab) {
  document.getElementById('playerModalOverview').style.display = (tab === 'overview') ? 'block' : 'none';
  document.getElementById('playerModalStats').style.display = (tab === 'stats') ? 'block' : 'none';
  Array.from(document.querySelectorAll('.player-modal-tab')).forEach(btn => btn.classList.remove('active'));
  document.querySelector(`.player-modal-tab[onclick*="${tab}"]`).classList.add('active');
}
// Close modal on overlay click
window.addEventListener('click', function(e) {
  if(e.target === document.getElementById('playerModal')) closePlayerModal();
});

// Add mock stats for Max Aarons
const playerStats = {
  'Max Aarons': {
    'Premier League': {
      'ALL': {
        appearances: 93, goals: 0, wins: 12, losses: 63,
        defence: { cleanSheets: 10, goalsConceded: 174, tackles: 143, tackleSuccess: '66%', lastMan: 1 },
        teamPlay: { assists: 4, passes: 2938, passesPerMatch: 31.59, bigChances: 10, crosses: 138 }
      },
      '2024/2025': { appearances: 3, goals: 0, wins: 1, losses: 2, defence: { cleanSheets: 1, goalsConceded: 10, tackles: 12, tackleSuccess: '70%', lastMan: 0 }, teamPlay: { assists: 0, passes: 120, passesPerMatch: 30, bigChances: 1, crosses: 10 } },
      '2023/2024': { appearances: 20, goals: 0, wins: 4, losses: 12, defence: { cleanSheets: 3, goalsConceded: 60, tackles: 40, tackleSuccess: '65%', lastMan: 0 }, teamPlay: { assists: 1, passes: 800, passesPerMatch: 32, bigChances: 2, crosses: 40 } },
      '2021/2022': { appearances: 34, goals: 0, wins: 5, losses: 17, defence: { cleanSheets: 4, goalsConceded: 80, tackles: 60, tackleSuccess: '66%', lastMan: 1 }, teamPlay: { assists: 2, passes: 1200, passesPerMatch: 35.29, bigChances: 5, crosses: 60 } },
      '2019/2020': { appearances: 36, goals: 0, wins: 2, losses: 32, defence: { cleanSheets: 2, goalsConceded: 24, tackles: 31, tackleSuccess: '60%', lastMan: 0 }, teamPlay: { assists: 1, passes: 818, passesPerMatch: 22.72, bigChances: 2, crosses: 28 } }
    },
    'FA Cup': { 'ALL': { appearances: 5, goals: 0, wins: 2, losses: 3, defence: { cleanSheets: 1, goalsConceded: 5, tackles: 10, tackleSuccess: '60%', lastMan: 0 }, teamPlay: { assists: 0, passes: 100, passesPerMatch: 20, bigChances: 0, crosses: 5 } } },
    'EFL Cup': { 'ALL': { appearances: 2, goals: 0, wins: 1, losses: 1, defence: { cleanSheets: 0, goalsConceded: 2, tackles: 3, tackleSuccess: '50%', lastMan: 0 }, teamPlay: { assists: 0, passes: 30, passesPerMatch: 15, bigChances: 0, crosses: 2 } } }
  }
};
function updateStatsTab() {
  const playerName = document.getElementById('modalPlayerName').textContent;
  const comp = document.getElementById('modalStatsCompetition').value;
  const season = document.getElementById('modalStatsSeason').value;
  let stats = null;
  if(playerStats[playerName] && playerStats[playerName][comp]) {
    stats = playerStats[playerName][comp][season] || playerStats[playerName][comp]['ALL'];
  }
  if(stats) {
    document.getElementById('modalStatsAppearances').textContent = stats.appearances;
    document.getElementById('modalStatsGoals').textContent = stats.goals;
    document.getElementById('modalStatsWins').textContent = stats.wins;
    document.getElementById('modalStatsLosses').textContent = stats.losses;
    document.getElementById('modalStatsCleanSheets').textContent = stats.defence.cleanSheets;
    document.getElementById('modalStatsGoalsConceded').textContent = stats.defence.goalsConceded;
    document.getElementById('modalStatsTackles').textContent = stats.defence.tackles;
    document.getElementById('modalStatsTackleSuccess').textContent = stats.defence.tackleSuccess;
    document.getElementById('modalStatsLastMan').textContent = stats.defence.lastMan;
    document.getElementById('modalStatsAssists').textContent = stats.teamPlay.assists;
    document.getElementById('modalStatsPasses').textContent = stats.teamPlay.passes;
    document.getElementById('modalStatsPassesPerMatch').textContent = stats.teamPlay.passesPerMatch;
    document.getElementById('modalStatsBigChances').textContent = stats.teamPlay.bigChances;
    document.getElementById('modalStatsCrosses').textContent = stats.teamPlay.crosses;
  } else {
    [ 'modalStatsAppearances', 'modalStatsGoals', 'modalStatsWins', 'modalStatsLosses',
      'modalStatsCleanSheets', 'modalStatsGoalsConceded', 'modalStatsTackles', 'modalStatsTackleSuccess', 'modalStatsLastMan',
      'modalStatsAssists', 'modalStatsPasses', 'modalStatsPassesPerMatch', 'modalStatsBigChances', 'modalStatsCrosses' ].forEach(id => {
      document.getElementById(id).textContent = '-';
    });
  }
}
function resetStatsFilters() {
  document.getElementById('modalStatsCompetition').value = 'Premier League';
  document.getElementById('modalStatsSeason').value = 'ALL';
  updateStatsTab();
}
// Update stats tab when shown
function showModalTab(tab) {
  document.getElementById('playerModalOverview').style.display = (tab === 'overview') ? 'block' : 'none';
  document.getElementById('playerModalStats').style.display = (tab === 'stats') ? 'block' : 'none';
  Array.from(document.querySelectorAll('.player-modal-tab')).forEach(btn => btn.classList.remove('active'));
  document.querySelector(`.player-modal-tab[onclick*="${tab}"]`).classList.add('active');
  if(tab === 'stats') updateStatsTab();
}
</script>

<!-- Player Details Modal -->
<div id="playerModal" class="player-modal-overlay" style="display:none;">
  <div class="player-modal">
    <span class="player-modal-close" onclick="closePlayerModal()">&times;</span>
    <div class="player-modal-header">
      <img id="modalPlayerPhoto" class="player-modal-photo" src="" alt="Player Photo">
      <div class="player-modal-title">
        <div id="modalPlayerName" class="player-modal-name"></div>
        <div id="modalPlayerPosition" class="player-modal-position"></div>
      </div>
    </div>
    <div class="player-modal-tabs">
      <button class="player-modal-tab active" onclick="showModalTab('overview')">Overview</button>
      <button class="player-modal-tab" onclick="showModalTab('stats')">Stats</button>
    </div>
    <div id="playerModalOverview" class="player-modal-content">
      <h4>Personal Details</h4>
      <div class="player-modal-details-row">
        <div><b>Nationality</b><br><span id="modalPlayerNationality"></span></div>
        <div><b>Date of Birth</b><br><span id="modalPlayerDOB"></span></div>
        <div><b>Height</b><br><span id="modalPlayerHeight"></span></div>
      </div>
      <div class="player-modal-socials">
        <span>Follow: </span>
        <a id="modalPlayerX" href="#" target="_blank"><i class="fab fa-x-twitter fa-lg"></i></a>
        <a id="modalPlayerInstagram" href="#" target="_blank"><i class="fab fa-instagram fa-lg"></i></a>
      </div>
      <h4>Premier League Record</h4>
      <div class="player-modal-record">
        <div><b>Appearances</b><br><span id="modalPlayerAppearances"></span></div>
        <div><b>Goals</b><br><span id="modalPlayerGoals"></span></div>
        <div><b>Assists</b><br><span id="modalPlayerAssists"></span></div>
        <div><b>Clean sheets</b><br><span id="modalPlayerCleanSheets"></span></div>
      </div>
      <h4>Premier League Playing Career</h4>
      <table class="player-modal-career-table">
        <thead><tr><th>Season</th><th>Club</th><th>Apps</th><th>Goals</th></tr></thead>
        <tbody id="modalPlayerCareer"></tbody>
      </table>
    </div>
    <div id="playerModalStats" class="player-modal-content" style="display:none;">
      <div class="player-modal-stats-filters-row">
        <select id="modalStatsCompetition" class="player-modal-stats-filter" onchange="updateStatsTab()">
          <option value="Premier League">Premier League</option>
          <option value="FA Cup">FA Cup</option>
          <option value="EFL Cup">EFL Cup</option>
        </select>
        <select id="modalStatsSeason" class="player-modal-stats-filter" onchange="updateStatsTab()">
          <option value="ALL">All Seasons</option>
          <option value="2024/2025">2024/2025</option>
          <option value="2023/2024">2023/2024</option>
          <option value="2021/2022">2021/2022</option>
          <option value="2019/2020">2019/2020</option>
        </select>
        <button class="player-modal-stats-reset" onclick="resetStatsFilters()"><i class="fas fa-sync-alt"></i> RESET FILTERS</button>
      </div>
      <div class="player-modal-stats-cards-row">
        <div class="player-modal-stats-card">
          <div class="player-modal-stats-card-label">Appearances</div>
          <div id="modalStatsAppearances" class="player-modal-stats-card-value">-</div>
        </div>
        <div class="player-modal-stats-card">
          <div class="player-modal-stats-card-label">Goals</div>
          <div id="modalStatsGoals" class="player-modal-stats-card-value">-</div>
        </div>
        <div class="player-modal-stats-card">
          <div class="player-modal-stats-card-label">Wins</div>
          <div id="modalStatsWins" class="player-modal-stats-card-value">-</div>
        </div>
        <div class="player-modal-stats-card">
          <div class="player-modal-stats-card-label">Losses</div>
          <div id="modalStatsLosses" class="player-modal-stats-card-value">-</div>
        </div>
      </div>
      <div class="player-modal-stats-columns-row">
        <div class="player-modal-stats-col">
          <div class="player-modal-stats-col-title">Defence</div>
          <div class="player-modal-stats-col-list">
            <div><span>Clean sheets</span><span id="modalStatsCleanSheets">-</span></div>
            <div><span>Goals Conceded</span><span id="modalStatsGoalsConceded">-</span></div>
            <div><span>Tackles</span><span id="modalStatsTackles">-</span></div>
            <div><span>Tackle success %</span><span id="modalStatsTackleSuccess">-</span></div>
            <div><span>Last man tackles</span><span id="modalStatsLastMan">-</span></div>
          </div>
        </div>
        <div class="player-modal-stats-col">
          <div class="player-modal-stats-col-title">Team Play</div>
          <div class="player-modal-stats-col-list">
            <div><span>Assists</span><span id="modalStatsAssists">-</span></div>
            <div><span>Passes</span><span id="modalStatsPasses">-</span></div>
            <div><span>Passes per match</span><span id="modalStatsPassesPerMatch">-</span></div>
            <div><span>Big Chances Created</span><span id="modalStatsBigChances">-</span></div>
            <div><span>Crosses</span><span id="modalStatsCrosses">-</span></div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div> 