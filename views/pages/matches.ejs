<style>
.matches-header {
  width: 100%;
  height: 180px;
  background: linear-gradient(120deg, #d10a0a 0%, #a80000 100%);
  color: #fff;
  display: flex;
  align-items: center;
  font-family: 'Oswald', Arial, sans-serif;
  font-size: 3rem;
  font-weight: 900;
  padding-left: 48px;
  letter-spacing: 2px;
  margin-bottom: 0;
}
.matches-tabs {
  display: flex;
  gap: 0;
  margin-top: -40px;
  margin-bottom: 32px;
  padding-left: 48px;
}
.matches-tab {
  background: #fff;
  color: #333;
  border: none;
  font-size: 1.1rem;
  font-weight: 600;
  padding: 16px 32px 12px 32px;
  border-radius: 12px 12px 0 0;
  margin-right: 8px;
  cursor: pointer;
  border-bottom: 3px solid transparent;
  transition: background 0.2s, color 0.2s;
}
.matches-tab.active {
  background: #f3f3f3;
  color: #d10a0a;
  border-bottom: 3px solid #d10a0a;
}
.matches-content {
  background: #fff;
  padding: 36px 48px;
  border-radius: 0 0 12px 12px;
  margin-bottom: 32px;
}
</style>
<link href="https://fonts.googleapis.com/css?family=Oswald:700&display=swap" rel="stylesheet">
<div class="matches-header">Matches - Football Livescore</div>
<div class="matches-tabs">
  <button class="matches-tab active" id="tab-live" onclick="showMatchesTab('live')">Live</button>
  <button class="matches-tab" id="tab-finished" onclick="showMatchesTab('finished')">Finished</button>
  <button class="matches-tab" id="tab-upcoming" onclick="showMatchesTab('upcoming')">Upcoming</button>
</div>
<div class="matches-content">
    <!-- Live Tab -->       
  <div id="matches-live-tab">
    <!-- Calendar Filter Icon for Live -->
    <div style="display:flex;align-items:center;justify-content:flex-end;margin-bottom:16px;">
      <button id="calendar-icon-btn-live" onclick="toggleCalendarPopupLive()" style="background:#fff;border:2px solid #e0e0e0;border-radius:12px;padding:6px 18px;display:flex;align-items:center;gap:10px;box-shadow:0 2px 8px #0001;cursor:pointer;">
        <svg width="28" height="28" viewBox="0 0 24 24" fill="none" stroke="#2456ff" stroke-width="2.2" stroke-linecap="round" stroke-linejoin="round"><rect x="3" y="4" width="18" height="18" rx="4"/><line x1="16" y1="2" x2="16" y2="6"/><line x1="8" y1="2" x2="8" y2="6"/></svg>
        <span id="calendar-selected-label-live" style="font-size:1.25rem;font-weight:700;color:#222;">04/05</span>
        <span style="font-size:1.5rem;color:#2456ff;font-weight:700;">&#8592;</span>
        <span style="font-size:1.5rem;color:#2456ff;font-weight:700;">&#8594;</span>
      </button>
    </div>
    <!-- Calendar Popup for Live -->
    <div id="calendar-popup-live" style="display:none;position:absolute;z-index:1000;left:50%;transform:translateX(-50%);top:220px;max-width:420px;background:#f8fafc;border-radius:16px;padding:18px 18px 8px 18px;box-shadow:0 2px 18px #0002;">
      <div style="display:flex;align-items:center;justify-content:space-between;margin-bottom:8px;">
        <button onclick="changeMonthLive(-1)" style="background:none;border:none;font-size:1.5rem;color:#3a8dde;font-weight:700;cursor:pointer;">&#8592;</button>
        <div id="calendar-month-label-live" style="font-size:1.2rem;font-weight:700;color:#222;">May 2025</div>
        <button onclick="changeMonthLive(1)" style="background:none;border:none;font-size:1.5rem;color:#3a8dde;font-weight:700;cursor:pointer;">&#8594;</button>
      </div>
      <div id="calendar-days-live" style="display:grid;grid-template-columns:repeat(7,1fr);gap:4px;text-align:center;font-size:1.08rem;color:#222;"></div>
      <button onclick="goToTodayLive()" style="margin:12px auto 0 auto;display:block;background:#3a8dde;color:#fff;font-weight:700;border:none;border-radius:6px;padding:6px 18px;font-size:1rem;">TODAY</button>
    </div>
    <!-- Live Matches List -->
    <div id="live-date-label" style="font-size:1.2rem;font-weight:700;color:#2456ff;margin:18px 0 8px 0;text-align:center;">Sunday, 4 May 2025</div>
    <div id="live-matches-list"></div>
  </div>
  <!-- Finished Tab -->
  <div id="matches-finished-tab" style="display:none;">
    <!-- Calendar Filter Icon -->
    <div style="display:flex;align-items:center;justify-content:flex-end;margin-bottom:16px;">
      <button id="calendar-icon-btn" onclick="toggleCalendarPopup()" style="background:#fff;border:2px solid #e0e0e0;border-radius:12px;padding:6px 18px;display:flex;align-items:center;gap:10px;box-shadow:0 2px 8px #0001;cursor:pointer;">
        <svg width="28" height="28" viewBox="0 0 24 24" fill="none" stroke="#2456ff" stroke-width="2.2" stroke-linecap="round" stroke-linejoin="round"><rect x="3" y="4" width="18" height="18" rx="4"/><line x1="16" y1="2" x2="16" y2="6"/><line x1="8" y1="2" x2="8" y2="6"/></svg>
        <span id="calendar-selected-label" style="font-size:1.25rem;font-weight:700;color:#222;">04/05</span>
        <span style="font-size:1.5rem;color:#2456ff;font-weight:700;">&#8592;</span>
        <span style="font-size:1.5rem;color:#2456ff;font-weight:700;">&#8594;</span>
      </button>
    </div>
    <!-- Calendar Popup -->
    <div id="calendar-popup" style="display:none;position:absolute;z-index:1000;left:50%;transform:translateX(-50%);top:220px;max-width:420px;background:#f8fafc;border-radius:16px;padding:18px 18px 8px 18px;box-shadow:0 2px 18px #0002;">
      <div style="display:flex;align-items:center;justify-content:space-between;margin-bottom:8px;">
        <button onclick="changeMonth(-1)" style="background:none;border:none;font-size:1.5rem;color:#3a8dde;font-weight:700;cursor:pointer;">&#8592;</button>
        <div id="calendar-month-label" style="font-size:1.2rem;font-weight:700;color:#222;">May 2025</div>
        <button onclick="changeMonth(1)" style="background:none;border:none;font-size:1.5rem;color:#3a8dde;font-weight:700;cursor:pointer;">&#8594;</button>
      </div>
      <div id="calendar-days" style="display:grid;grid-template-columns:repeat(7,1fr);gap:4px;text-align:center;font-size:1.08rem;color:#222;"></div>
      <button onclick="goToToday()" style="margin:12px auto 0 auto;display:block;background:#3a8dde;color:#fff;font-weight:700;border:none;border-radius:6px;padding:6px 18px;font-size:1rem;">TODAY</button>
    </div>
    <!-- Finished Matches List -->
    <div id="finished-date-label" style="font-size:1.2rem;font-weight:700;color:#2456ff;margin:18px 0 8px 0;text-align:center;">Sunday, 4 May 2025</div>
    <div id="finished-matches-list"></div>
  </div>
  <!-- Upcoming tab -->
  <div id="matches-upcoming-tab" style="display:none;">
    <!-- Featured Match Card -->
    <div id="featured-match" style="max-width:480px;margin:32px auto 24px auto;background:#f8fafc;border-radius:18px;box-shadow:0 2px 12px #0001;padding:24px 18px 12px 18px;">
      <div style="font-size:1.3rem;font-weight:700;text-align:center;color:#222;margin-bottom:12px;">Featured</div>
      <div style="display:flex;align-items:center;justify-content:space-between;background:#f4f6fa;border-radius:12px;padding:18px 12px 12px 12px;">
        <div style="text-align:center;">
          <img src='/images/clubs/intermiami.png' alt='Inter Miami' style='height:48px;width:48px;'><br>
          <span style="font-weight:700;color:#222;">Inter Miami</span>
        </div>
        <div style="text-align:center;">
          <div style="font-size:2.1rem;font-weight:900;color:#222;">07:30</div>
          <div style="font-size:1.1rem;color:#888;">Today</div>
          <div id="featured-countdown" style="font-size:1.1rem;color:#3a8dde;font-weight:700;">00:41:42</div>
        </div>
        <div style="text-align:center;">
          <img src='/images/clubs/nyredbulls.png' alt='NY Red Bulls' style='height:48px;width:48px;'><br>
          <span style="font-weight:700;color:#222;">NY Red Bulls</span>
        </div>
      </div>
      <div style="margin-top:18px;background:#f4f6fa;border-radius:10px;padding:14px 12px 8px 12px;">
        <div style="font-size:1.08rem;font-weight:700;color:#222;margin-bottom:8px;">Asian handicap</div>
        <div style="display:flex;align-items:center;justify-content:space-between;">
          <div style="font-size:1.08rem;color:#222;">(-1) Inter Miami CF</div>
          <div style="font-size:1.08rem;color:#222;">(1) New York Red Bulls</div>
        </div>
        <div style="display:flex;align-items:center;justify-content:space-between;margin-top:8px;">
          <a href="https://1xlite-447029.top/en/live/football" target="_blank" style="color:#3a8dde;font-weight:700;text-decoration:underline;">Additional odds</a>
          <span style="font-size:0.98rem;color:#888;">Gamble responsibly 18+.</span>
        </div>
      </div>
    </div>
    <!-- Calendar Filter Icon for Upcoming -->
    <div style="display:flex;align-items:center;justify-content:flex-end;margin-bottom:16px;">
      <button id="calendar-icon-btn-upcoming" onclick="toggleCalendarPopupUpcoming()" style="background:#fff;border:2px solid #e0e0e0;border-radius:12px;padding:6px 18px;display:flex;align-items:center;gap:10px;box-shadow:0 2px 8px #0001;cursor:pointer;">
        <svg width="28" height="28" viewBox="0 0 24 24" fill="none" stroke="#2456ff" stroke-width="2.2" stroke-linecap="round" stroke-linejoin="round"><rect x="3" y="4" width="18" height="18" rx="4"/><line x1="16" y1="2" x2="16" y2="6"/><line x1="8" y1="2" x2="8" y2="6"/></svg>
        <span id="calendar-selected-label-upcoming" style="font-size:1.25rem;font-weight:700;color:#222;">04/05</span>
        <span style="font-size:1.5rem;color:#2456ff;font-weight:700;">&#8592;</span>
        <span style="font-size:1.5rem;color:#2456ff;font-weight:700;">&#8594;</span>
      </button>
    </div>
    <!-- Calendar Popup for Upcoming -->
    <div id="calendar-popup-upcoming" style="display:none;position:absolute;z-index:1000;left:50%;transform:translateX(-50%);top:220px;max-width:420px;background:#f8fafc;border-radius:16px;padding:18px 18px 8px 18px;box-shadow:0 2px 18px #0002;">
      <div style="display:flex;align-items:center;justify-content:space-between;margin-bottom:8px;">
        <button onclick="changeMonthUpcoming(-1)" style="background:none;border:none;font-size:1.5rem;color:#3a8dde;font-weight:700;cursor:pointer;">&#8592;</button>
        <div id="calendar-month-label-upcoming" style="font-size:1.2rem;font-weight:700;color:#222;">May 2025</div>
        <button onclick="changeMonthUpcoming(1)" style="background:none;border:none;font-size:1.5rem;color:#3a8dde;font-weight:700;cursor:pointer;">&#8594;</button>
      </div>
      <div id="calendar-days-upcoming" style="display:grid;grid-template-columns:repeat(7,1fr);gap:4px;text-align:center;font-size:1.08rem;color:#222;"></div>
      <button onclick="goToTodayUpcoming()" style="margin:12px auto 0 auto;display:block;background:#3a8dde;color:#fff;font-weight:700;border:none;border-radius:6px;padding:6px 18px;font-size:1rem;">TODAY</button>
    </div>
    <!-- Upcoming Matches List -->
    <div id="upcoming-date-label" style="font-size:1.2rem;font-weight:700;color:#2456ff;margin:18px 0 8px 0;text-align:center;">Sunday, 4 May 2025</div>
    <div id="upcoming-matches-list"></div>
  </div>
</div>
<script>
function showMatchesTab(tab) {
  document.getElementById('matches-live-tab').style.display = (tab === 'live') ? 'block' : 'none';
  document.getElementById('matches-finished-tab').style.display = (tab === 'finished') ? 'block' : 'none';
  document.getElementById('matches-upcoming-tab').style.display = (tab === 'upcoming') ? 'block' : 'none';
  document.getElementById('tab-live').classList.toggle('active', tab === 'live');
  document.getElementById('tab-finished').classList.toggle('active', tab === 'finished');
  document.getElementById('tab-upcoming').classList.toggle('active', tab === 'upcoming');
}

// Featured match countdown
function updateFeaturedCountdown() {
  // Set your match time here
  const matchTime = new Date();
  matchTime.setHours(7, 30, 0, 0); // 07:30 today
  const now = new Date();
  let diff = matchTime - now;
  if(diff < 0) diff = 0;
  const h = String(Math.floor(diff / (1000*60*60))).padStart(2,'0');
  const m = String(Math.floor((diff / (1000*60)) % 60)).padStart(2,'0');
  const s = String(Math.floor((diff / 1000) % 60)).padStart(2,'0');
  document.getElementById('featured-countdown').innerText = `${h}:${m}:${s}`;
}
setInterval(updateFeaturedCountdown, 1000);
updateFeaturedCountdown();

// Calendar filter logic
const finishedMatches = [
  { date: '2025-05-04', country: 'England', league: 'Premier League', time: '00:30', home: 'Arsenal', away: 'Bournemouth', homeScore: 1, awayScore: 2 },
  { date: '2025-05-04', country: 'Italy', league: 'Serie A', time: '00:00', home: 'Lecce', away: 'Napoli', homeScore: 0, awayScore: 1 },
  { date: '2025-05-04', country: 'Italy', league: 'Serie A', time: '02:45', home: 'Inter', away: 'Verona', homeScore: 1, awayScore: 0 }
];
let calendarMonth = 4; // May (0-based)
let calendarYear = 2025;
let selectedDate = '2025-05-04';
function toggleCalendarPopup() {
  const popup = document.getElementById('calendar-popup');
  popup.style.display = (popup.style.display === 'none' || popup.style.display === '') ? 'block' : 'none';
}
function filterByDate(dateStr) {
  selectedDate = dateStr;
  document.getElementById('calendar-popup').style.display = 'none';
  renderFinishedMatches(dateStr);
  updateCalendarSelectedLabel(dateStr);
  renderCalendar();
}
function goToToday() {
  const today = new Date();
  const dateStr = `${today.getFullYear()}-${String(today.getMonth()+1).padStart(2,'0')}-${String(today.getDate()).padStart(2,'0')}`;
  calendarMonth = today.getMonth();
  calendarYear = today.getFullYear();
  selectedDate = dateStr;
  renderCalendar();
  renderFinishedMatches(dateStr);
  updateCalendarSelectedLabel(dateStr);
  document.getElementById('calendar-popup').style.display = 'none';
}
function updateCalendarSelectedLabel(dateStr) {
  const d = new Date(dateStr);
  const label = `${String(d.getDate()).padStart(2,'0')}/${String(d.getMonth()+1).padStart(2,'0')}`;
  document.getElementById('calendar-selected-label').innerText = label;
  // Update date label above matches
  document.getElementById('finished-date-label').innerText = d.toLocaleDateString('en-GB', { weekday:'long', year:'numeric', month:'long', day:'numeric' });
}
function renderCalendar() {
  const daysEl = document.getElementById('calendar-days');
  const monthLabel = document.getElementById('calendar-month-label');
  const today = new Date();
  const firstDay = new Date(calendarYear, calendarMonth, 1);
  const lastDay = new Date(calendarYear, calendarMonth + 1, 0);
  monthLabel.innerText = `${firstDay.toLocaleString('default', { month: 'long' })} ${calendarYear}`;
  let html = '';
  // Days of week
  ['Sun','Mon','Tue','Wed','Thu','Fri','Sat'].forEach(d => html += `<div style='font-weight:700;color:#3a8dde;'>${d}</div>`);
  // Empty slots
  for(let i=0;i<firstDay.getDay();i++) html += `<div></div>`;
  for(let d=1;d<=lastDay.getDate();d++) {
    const dateStr = `${calendarYear}-${String(calendarMonth+1).padStart(2,'0')}-${String(d).padStart(2,'0')}`;
    const hasMatch = finishedMatches.some(m => m.date === dateStr);
    const isSelected = dateStr === selectedDate;
    html += `<div style='margin:2px;'><button onclick='filterByDate("${dateStr}")' style='width:32px;height:32px;border-radius:50%;border:none;background:${isSelected?'#2456ff':hasMatch?'#3a8dde':'#f4f6fa'};color:${isSelected||hasMatch?'#fff':'#222'};font-weight:700;cursor:pointer;'>${d}</button></div>`;
  }
  daysEl.innerHTML = html;
}
function renderFinishedMatches(filterDate) {
  const listEl = document.getElementById('finished-matches-list');
  let matches = finishedMatches;
  if(filterDate) matches = matches.filter(m => m.date === filterDate);
  let html = '';
  let lastCountry = '', lastLeague = '';
  matches.forEach(m => {
    if(m.country !== lastCountry) {
      html += `<div style='margin-top:18px;font-size:1.1rem;font-weight:700;color:#3a8dde;'><img src='/images/flags/${m.country.toLowerCase()}.png' style='height:18px;margin-right:6px;'>${m.country}</div>`;
      lastCountry = m.country; lastLeague = '';
    }
    if(m.league !== lastLeague) {
      html += `<div style='font-size:1.08rem;font-weight:700;color:#222;margin-bottom:2px;'>${m.league}</div>`;
      lastLeague = m.league;
    }
    html += `<div style='display:flex;align-items:center;gap:18px;margin-bottom:8px;'>
      <div style='width:60px;color:#888;font-size:1.02rem;'>${m.time}<br><span style='font-size:0.95rem;'>FT</span></div>
      <div style='flex:1;'><span style='font-weight:700;color:#222;'>${m.home}</span> <span style='color:#888;'>vs</span> <span style='font-weight:700;color:#222;'>${m.away}</span></div>
      <div style='font-size:1.2rem;font-weight:700;color:#d10a0a;'>${m.homeScore} - ${m.awayScore}</div>
    </div>`;
  });
  if(matches.length === 0) html = `<div style='text-align:center;color:#888;margin:32px 0;'>No matches found for this date.</div>`;
  listEl.innerHTML = html;
  updateCalendarSelectedLabel(filterDate || selectedDate);
}
function changeMonth(delta) {
  calendarMonth += delta;
  if(calendarMonth < 0) { calendarMonth = 11; calendarYear--; }
  if(calendarMonth > 11) { calendarMonth = 0; calendarYear++; }
  // If selectedDate is not in the new month, clear highlight
  const d = new Date(selectedDate);
  if (d.getMonth() !== calendarMonth || d.getFullYear() !== calendarYear) {
    selectedDate = '';
  }
  renderCalendar();
}

// Upcoming matches data and calendar logic
const upcomingMatches = [
  { date: '2025-05-04', country: 'Singapore', league: 'Premier League', time: '18:00', home: 'Lion City Sailors', away: 'Geylang Int.' },
  { date: '2025-05-04', country: 'England', league: 'Premier League', time: '21:00', home: 'Brentford', away: 'Man Utd' },
  { date: '2025-05-04', country: 'England', league: 'Premier League', time: '21:00', home: 'Brighton', away: 'Newcastle' },
  { date: '2025-05-04', country: 'England', league: 'Premier League', time: '21:00', home: 'West Ham', away: 'Tottenham' },
  { date: '2025-05-04', country: 'England', league: 'Premier League', time: '23:30', home: 'Chelsea', away: 'Liverpool' }
];
let calendarMonthUpcoming = 4; // May (0-based)
let calendarYearUpcoming = 2025;
let selectedDateUpcoming = '2025-05-04';
function toggleCalendarPopupUpcoming() {
  const popup = document.getElementById('calendar-popup-upcoming');
  popup.style.display = (popup.style.display === 'none' || popup.style.display === '') ? 'block' : 'none';
}
function filterByDateUpcoming(dateStr) {
  selectedDateUpcoming = dateStr;
  document.getElementById('calendar-popup-upcoming').style.display = 'none';
  renderUpcomingMatches(dateStr);
  updateCalendarSelectedLabelUpcoming(dateStr);
  renderCalendarUpcoming();
}
function goToTodayUpcoming() {
  const today = new Date();
  const dateStr = `${today.getFullYear()}-${String(today.getMonth()+1).padStart(2,'0')}-${String(today.getDate()).padStart(2,'0')}`;
  calendarMonthUpcoming = today.getMonth();
  calendarYearUpcoming = today.getFullYear();
  selectedDateUpcoming = dateStr;
  renderCalendarUpcoming();
  renderUpcomingMatches(dateStr);
  updateCalendarSelectedLabelUpcoming(dateStr);
  document.getElementById('calendar-popup-upcoming').style.display = 'none';
}
function updateCalendarSelectedLabelUpcoming(dateStr) {
  const d = new Date(dateStr);
  const label = `${String(d.getDate()).padStart(2,'0')}/${String(d.getMonth()+1).padStart(2,'0')}`;
  document.getElementById('calendar-selected-label-upcoming').innerText = label;
  document.getElementById('upcoming-date-label').innerText = d.toLocaleDateString('en-GB', { weekday:'long', year:'numeric', month:'long', day:'numeric' });
}
function renderCalendarUpcoming() {
  const daysEl = document.getElementById('calendar-days-upcoming');
  const monthLabel = document.getElementById('calendar-month-label-upcoming');
  const firstDay = new Date(calendarYearUpcoming, calendarMonthUpcoming, 1);
  const lastDay = new Date(calendarYearUpcoming, calendarMonthUpcoming + 1, 0);
  monthLabel.innerText = `${firstDay.toLocaleString('default', { month: 'long' })} ${calendarYearUpcoming}`;
  let html = '';
  ['Sun','Mon','Tue','Wed','Thu','Fri','Sat'].forEach(d => html += `<div style='font-weight:700;color:#3a8dde;'>${d}</div>`);
  for(let i=0;i<firstDay.getDay();i++) html += `<div></div>`;
  for(let d=1;d<=lastDay.getDate();d++) {
    const dateStr = `${calendarYearUpcoming}-${String(calendarMonthUpcoming+1).padStart(2,'0')}-${String(d).padStart(2,'0')}`;
    const hasMatch = upcomingMatches.some(m => m.date === dateStr);
    const isSelected = dateStr === selectedDateUpcoming;
    html += `<div style='margin:2px;'><button onclick='filterByDateUpcoming("${dateStr}")' style='width:32px;height:32px;border-radius:50%;border:none;background:${isSelected?'#2456ff':hasMatch?'#3a8dde':'#f4f6fa'};color:${isSelected||hasMatch?'#fff':'#222'};font-weight:700;cursor:pointer;'>${d}</button></div>`;
  }
  daysEl.innerHTML = html;
}
function changeMonthUpcoming(delta) {
  calendarMonthUpcoming += delta;
  if(calendarMonthUpcoming < 0) { calendarMonthUpcoming = 11; calendarYearUpcoming--; }
  if(calendarMonthUpcoming > 11) { calendarMonthUpcoming = 0; calendarYearUpcoming++; }
  const d = new Date(selectedDateUpcoming);
  if (d.getMonth() !== calendarMonthUpcoming || d.getFullYear() !== calendarYearUpcoming) {
    selectedDateUpcoming = '';
  }
  renderCalendarUpcoming();
}
function renderUpcomingMatches(filterDate) {
  const listEl = document.getElementById('upcoming-matches-list');
  let matches = upcomingMatches;
  if(filterDate) matches = matches.filter(m => m.date === filterDate);
  let html = '';
  let lastCountry = '', lastLeague = '';
  matches.forEach(m => {
    if(m.country !== lastCountry) {
      html += `<div style='margin-top:18px;font-size:1.1rem;font-weight:700;color:#3a8dde;'><img src='/images/flags/${m.country.toLowerCase()}.png' style='height:18px;margin-right:6px;'>${m.country}</div>`;
      lastCountry = m.country; lastLeague = '';
    }
    if(m.league !== lastLeague) {
      html += `<div style='font-size:1.08rem;font-weight:700;color:#222;margin-bottom:2px;'>${m.league}</div>`;
      lastLeague = m.league;
    }
    html += `<div style='display:flex;align-items:center;gap:18px;margin-bottom:8px;'>
      <div style='width:60px;color:#888;font-size:1.02rem;'>${m.time}</div>
      <div style='flex:1;'><span style='font-weight:700;color:#222;'>${m.home}</span> <span style='color:#888;'>vs</span> <span style='font-weight:700;color:#222;'>${m.away}</span></div>
    </div>`;
  });
  if(matches.length === 0) html = `<div style='text-align:center;color:#888;margin:32px 0;'>No matches found for this date.</div>`;
  listEl.innerHTML = html;
  updateCalendarSelectedLabelUpcoming(filterDate || selectedDateUpcoming);
}
// Initial render for upcoming
renderCalendarUpcoming();
renderUpcomingMatches(selectedDateUpcoming);
updateCalendarSelectedLabelUpcoming(selectedDateUpcoming);

// Live matches data and calendar logic
const liveMatches = [
  { date: '2025-05-04', country: 'USA', league: 'MLS', time: '07:30', min: 20, home: 'Montréal', away: 'Philadelphia', homeScore: 0, awayScore: 1 },
  { date: '2025-05-04', country: 'USA', league: 'MLS', time: '07:30', min: 18, home: 'Columbus', away: 'Charlotte', homeScore: 0, awayScore: 0 },
  { date: '2025-05-04', country: 'USA', league: 'MLS', time: '07:30', min: 19, home: 'DC United', away: 'Colorado', homeScore: 0, awayScore: 0 },
  { date: '2025-05-04', country: 'USA', league: 'MLS', time: '07:30', min: 20, home: 'Inter Miami', away: 'NY Red Bulls', homeScore: 1, awayScore: 0 },
  { date: '2025-05-04', country: 'Brazil', league: 'Brasileirão Série B', time: '07:30', min: 29, home: 'Volta Redonda', away: 'Paysandu', homeScore: 0, awayScore: 0 }
];
let calendarMonthLive = 4; // May (0-based)
let calendarYearLive = 2025;
let selectedDateLive = '2025-05-04';
function toggleCalendarPopupLive() {
  const popup = document.getElementById('calendar-popup-live');
  popup.style.display = (popup.style.display === 'none' || popup.style.display === '') ? 'block' : 'none';
}
function filterByDateLive(dateStr) {
  selectedDateLive = dateStr;
  document.getElementById('calendar-popup-live').style.display = 'none';
  renderLiveMatches(dateStr);
  updateCalendarSelectedLabelLive(dateStr);
  renderCalendarLive();
}
function goToTodayLive() {
  const today = new Date();
  const dateStr = `${today.getFullYear()}-${String(today.getMonth()+1).padStart(2,'0')}-${String(today.getDate()).padStart(2,'0')}`;
  calendarMonthLive = today.getMonth();
  calendarYearLive = today.getFullYear();
  selectedDateLive = dateStr;
  renderCalendarLive();
  renderLiveMatches(dateStr);
  updateCalendarSelectedLabelLive(dateStr);
  document.getElementById('calendar-popup-live').style.display = 'none';
}
function updateCalendarSelectedLabelLive(dateStr) {
  const d = new Date(dateStr);
  const label = `${String(d.getDate()).padStart(2,'0')}/${String(d.getMonth()+1).padStart(2,'0')}`;
  document.getElementById('calendar-selected-label-live').innerText = label;
  document.getElementById('live-date-label').innerText = d.toLocaleDateString('en-GB', { weekday:'long', year:'numeric', month:'long', day:'numeric' });
}
function renderCalendarLive() {
  const daysEl = document.getElementById('calendar-days-live');
  const monthLabel = document.getElementById('calendar-month-label-live');
  const firstDay = new Date(calendarYearLive, calendarMonthLive, 1);
  const lastDay = new Date(calendarYearLive, calendarMonthLive + 1, 0);
  monthLabel.innerText = `${firstDay.toLocaleString('default', { month: 'long' })} ${calendarYearLive}`;
  let html = '';
  ['Sun','Mon','Tue','Wed','Thu','Fri','Sat'].forEach(d => html += `<div style='font-weight:700;color:#3a8dde;'>${d}</div>`);
  for(let i=0;i<firstDay.getDay();i++) html += `<div></div>`;
  for(let d=1;d<=lastDay.getDate();d++) {
    const dateStr = `${calendarYearLive}-${String(calendarMonthLive+1).padStart(2,'0')}-${String(d).padStart(2,'0')}`;
    const hasMatch = liveMatches.some(m => m.date === dateStr);
    const isSelected = dateStr === selectedDateLive;
    html += `<div style='margin:2px;'><button onclick='filterByDateLive("${dateStr}")' style='width:32px;height:32px;border-radius:50%;border:none;background:${isSelected?'#2456ff':hasMatch?'#3a8dde':'#f4f6fa'};color:${isSelected||hasMatch?'#fff':'#222'};font-weight:700;cursor:pointer;'>${d}</button></div>`;
  }
  daysEl.innerHTML = html;
}
function changeMonthLive(delta) {
  calendarMonthLive += delta;
  if(calendarMonthLive < 0) { calendarMonthLive = 11; calendarYearLive--; }
  if(calendarMonthLive > 11) { calendarMonthLive = 0; calendarYearLive++; }
  const d = new Date(selectedDateLive);
  if (d.getMonth() !== calendarMonthLive || d.getFullYear() !== calendarYearLive) {
    selectedDateLive = '';
  }
  renderCalendarLive();
}
function renderLiveMatches(filterDate) {
  const listEl = document.getElementById('live-matches-list');
  let matches = liveMatches;
  if(filterDate) matches = matches.filter(m => m.date === filterDate);
  let html = '';
  let lastCountry = '', lastLeague = '';
  matches.forEach(m => {
    if(m.country !== lastCountry) {
      html += `<div style='margin-top:18px;font-size:1.1rem;font-weight:700;color:#3a8dde;'><img src='/images/flags/${m.country.toLowerCase()}.png' style='height:18px;margin-right:6px;'>${m.country}</div>`;
      lastCountry = m.country; lastLeague = '';
    }
    if(m.league !== lastLeague) {
      html += `<div style='font-size:1.08rem;font-weight:700;color:#222;margin-bottom:2px;'>${m.league}</div>`;
      lastLeague = m.league;
    }
    html += `<div style='display:flex;align-items:center;gap:18px;margin-bottom:8px;'>
      <div style='width:60px;color:#888;font-size:1.02rem;'>${m.time}<br><span style='color:#d10a0a;font-weight:700;'>${m.min}'</span></div>
      <div style='flex:1;'><span style='font-weight:700;color:#222;'>${m.home}</span> <span style='color:#888;'>vs</span> <span style='font-weight:700;color:#222;'>${m.away}</span></div>
      <div style='font-size:1.2rem;font-weight:700;color:#d10a0a;'>${m.homeScore} - ${m.awayScore}</div>
    </div>`;
  });
  if(matches.length === 0) html = `<div style='text-align:center;color:#888;margin:32px 0;'>No matches found for this date.</div>`;
  listEl.innerHTML = html;
  updateCalendarSelectedLabelLive(filterDate || selectedDateLive);
}
// Initial render for live
renderCalendarLive();
renderLiveMatches(selectedDateLive);
updateCalendarSelectedLabelLive(selectedDateLive);
</script> 